apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: /snap/kompose/19/kompose-linux-amd64 convert -f docker-compose.yml
      -o DeployConfig
    kompose.version: 1.21.0 (992df58d8)
  creationTimestamp: null
  labels:
    io.kompose.service: webapi
  name: webapi
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: webapi
  strategy: {}
  template:
    metadata:
      annotations:
        kompose.cmd: /snap/kompose/19/kompose-linux-amd64 convert -f docker-compose.yml
          -o DeployConfig
        kompose.version: 1.21.0 (992df58d8)
      creationTimestamp: null
      labels:
        io.kompose.network/postgres-compose-network: "true"
        io.kompose.service: webapi
    spec:
      containers:
      - env:
        - name: eureka.client.serviceUrl.defaultZone
          value: http://eureka-server:8761/eureka/
        - name: eureka.instance.preferIpAddress
          value: "true"
        - name: javainuse.rabbitmq.queue
          value: process_image
        - name: queue.name
          value: process_image
        - name: server.port
          value: "9001"
        - name: spring.application.name
          value: user
        - name: spring.rabbitmq.host
          value: rabbitmq_management
        - name: spring.rabbitmq.password
          value: guest
        - name: spring.rabbitmq.port
          value: "5672"
        - name: spring.rabbitmq.template.default-receive-queue
          value: process_image
        - name: spring.rabbitmq.username
          value: guest
        - name: springdoc.api-docs.path
          value: /api-docs
        - name: springdoc.swagger-ui.operations-sorter
          value: method
        - name: springdoc.swagger-ui.path
          value: /swagger-ui.html
        image: webapi-rest:1.0.0
        imagePullPolicy: ""
        name: webapi
        ports:
        - containerPort: 9001
        resources: {}
      restartPolicy: Always
      serviceAccountName: ""
      volumes: null
status: {}
